var PrivacyDefinition=Backbone.Model.extend({defaults:{level:undefined,excludeList:[],includeList:[],exclude:[],include:[]},flattenLists:function(e,t){console.debug("[PrivacyDefinition] plain lists are: ",this.get("excludeList"),this.get("includeList"));this.set("exclude",new FacebookUserCollection);this.set("include",new FacebookUserCollection);if(this.get("excludeList").length>0||this.get("includeList").length>0){t.each(_.bind(function(e){var t=e.get("name");if(_.contains(this.get("excludeList"),t)){console.log("[PrivacyDefinition] Exclude id contains this list, replacing with listmembers");this.get("exclude").add(e.get("members").models)}if(_.contains(this.get("includeList"),t)){console.log("[PrivacyDefinition] Include id contains this list, replacing with listmembers");this.get("include").add(e.get("members").models)}},this));e.each(_.bind(function(e){var t=e.get("name");if(_.contains(this.get("excludeList"),t)){console.log("[PrivacyDefinition] Exclude id contains friend, replacing.");this.get("exclude").add(e)}if(_.contains(this.get("includeList"),t)){console.log("[PrivacyDefinition] Include id contains friend, replacing.");this.get("include").add(e)}},this))}console.debug("[PrivacyDefinition] Definition for item: ",this.get("exclude"),this.get("include"))}},{Level:{ALL:0,FOF:1,FRIENDS:2,ME:3,NOBODY:4,CUSTOM:5}}),FacebookPicture=Backbone.Model.extend({defaults:{id:undefined,name:undefined,source:undefined,height:undefined,width:undefined,privacy:undefined},initialize:function(e){if(!e.id||!e.source){console.error("Picture missing required data (id, source)",e.id,e.source);throw new Exception("Picture missing required data: id or source")}this.set("id",e.id);this.set("name",e.name);this.set("source",e.source);this._getPrivacy()},validatePrivacy:function(e,t){this.get("privacy").flattenLists(e,t)},_getPrivacy:function(){this.set("privacy",new PrivacyDefinition);try{FB.api({method:"fql.query",query:FacebookPicture.FB_FQL_QUERY+this.get("id")},_.bind(function(e){if(!e||e.length!=1){this.set("privacy",!1);console.error("Unable to get privacy settings for picture "+this.get("id"));this.trigger("privacy-error");return}if(!e[0].value){this.set("privacy",!1);console.error("No privacy setting for picture "+this.get("id"));this.trigger("privacy-error");return}var t;switch(e[0].value){case FacebookPicture.FB_FQL_VALUE_ALL:t=PrivacyDefinition.Level.ALL;break;case FacebookPicture.FB_FQL_VALUE_FOF:t=PrivacyDefinition.Level.FOF;break;case FacebookPicture.FB_FQL_VALUE_FRIENDS:t=PrivacyDefinition.Level.FRIENDS;break;case FacebookPicture.FB_FQL_VALUE_ME:t=PrivacyDefinition.Level.ME;break;case FacebookPicture.FB_FQL_VALUE_NOBODY:t=PrivacyDefinition.Level.NOBODY;break;case FacebookPicture.FB_FQL_VALUE_CUSTOM:t=PrivacyDefinition.Level.CUSTOM;break;default:console.warn("[FacebookPicture] Found unrecognized privacy level",e[0].value)}this.get("privacy").set("level",t);var n=e[0].description;if(!_.isNull(n)){var r=[],i=[],s;if(n.match(FacebookPicture.FB_FQL_TWOLIST_SEPERATOR)){s=n.split(FacebookPicture.FB_FQL_TWOLIST_SEPERATOR);i=s[0].split(FacebookPicture.FB_FQL_NAME_SEPERATOR);r=s[1].split(FacebookPicture.FB_FQL_NAME_SEPERATOR)}else n.match(FacebookPicture.FB_FQL_EXCEPT_SEPERATOR)?r=n.replace(FacebookPicture.B_FQL_EXCEPT_SEPERATOR,"").split(FacebookPicture.FB_FQL_NAME_SEPERATOR):i=n.split(FacebookPicture.FB_FQL_NAME_SEPERATOR);i.push(FacebookPlayer.getInstance().get("name"));this.get("privacy").set("excludeList",r);this.get("privacy").set("includeList",i)}this.trigger("privacy")},this))}catch(e){console.error("Error while getting privacy for picture ",e)}}},{FB_FQL_QUERY:"SELECT value,description,owner_id,friends FROM privacy WHERE id = ",FB_FQL_VALUE_ALL:"EVERYONE",FB_FQL_VALUE_FOF:"FRIENDS_OF_FRIENDS",FB_FQL_VALUE_FRIENDS:"ALL_FRIENDS",FB_FQL_VALUE_ME:"SELF",FB_FQL_VALUE_NOBODY:"NOBODY",FB_FQL_VALUE_CUSTOM:"CUSTOM",FB_FQL_NAME_SEPERATOR:", ",FB_FQL_TWOLIST_SEPERATOR:/; Except: /,FB_FQL_EXCEPT_SEPERATOR:/Except: /}),FacebookPictureCollection=Backbone.Collection.extend({model:FacebookPicture,getByPid:function(e){return this.where({id:e})}});